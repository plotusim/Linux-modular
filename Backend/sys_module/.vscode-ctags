!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_EXTRA_DESCRIPTION!Kconfig	configPrefixed	/prepend CONFIG_ to config names/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Kconfig	C,choice	/choices/
!_TAG_KIND_DESCRIPTION!Kconfig	M,mainMenu	/the main menu/
!_TAG_KIND_DESCRIPTION!Kconfig	c,config	/configs/
!_TAG_KIND_DESCRIPTION!Kconfig	k,kconfig	/kconfig file/
!_TAG_KIND_DESCRIPTION!Kconfig	m,menu	/menus/
!_TAG_KIND_DESCRIPTION!Kconfig	v,variable	/macro variables/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!Kconfig	1.1	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/plot/Linux-modular/cjh/test/sys_module/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/729f6522/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Kconfig!kconfig	source	/kconfig file loaded with source directive/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
CONFIG_SYS_MODULE	Kconfig	/^config SYS_MODULE$/;"	c
CONFIG_SYS_MODULE_MODULE	Kconfig	/^config SYS_MODULE$/;"	c
EXPORT_FUNC	jmp_interface.h	/^#define EXPORT_FUNC(/;"	d
FIND_SYMBOL	unexport_symbol_find.h	/^#define FIND_SYMBOL(/;"	d
HEAD_LEN	jmp_interface.h	/^#define HEAD_LEN /;"	d
JMP_INIT	jmp_interface.h	/^#define JMP_INIT(/;"	d
JMP_INSTALL	jmp_interface.h	/^#define JMP_INSTALL(/;"	d
JMP_INTERFACE	jmp_interface.h	/^#define JMP_INTERFACE$/;"	d
JMP_OPERATION	jmp_interface.h	/^#define JMP_OPERATION(/;"	d
JMP_REMOVE	jmp_interface.h	/^#define JMP_REMOVE(/;"	d
JMP_VAR_DEC	jmp_interface.h	/^#define JMP_VAR_DEC(/;"	d
NAME	unexport_symbol_find.h	/^#define NAME(/;"	d
SYS_MODULE	Kconfig	/^config SYS_MODULE$/;"	c
UNEXPORT_FUNC	unexport_symbol_dec.h	/^#define UNEXPORT_FUNC(/;"	d
UNEXPORT_FUNC	unexport_symbol_find.h	/^#define UNEXPORT_FUNC(/;"	d
UNEXPORT_SYMBOL_FIND	unexport_symbol_find.h	/^#define UNEXPORT_SYMBOL_FIND$/;"	d
UNEXPORT_VAR	unexport_symbol_dec.h	/^#define UNEXPORT_VAR(/;"	d
UNEXPORT_VAR	unexport_symbol_find.h	/^#define UNEXPORT_VAR(/;"	d
VAR_NAME	jmp_interface.h	/^#define VAR_NAME(/;"	d
disable_write_protect	toolfunc.h	/^static inline void *disable_write_protect(void *addr)$/;"	f	typeref:typename:void *
disable_write_protect	toolfunc.h	/^static void *disable_write_protect(void *addr)$/;"	f	typeref:typename:void *
do_write_cr0	toolfunc.h	/^static inline void do_write_cr0(unsigned long val)$/;"	f	typeref:typename:void
enable_write_protect	toolfunc.h	/^static inline void enable_write_protect(void)$/;"	f	typeref:typename:void
find_symbol	unexport_symbol_find.h	/^static inline int find_symbol(void){$/;"	f	typeref:typename:int
jmp_init	jmp_interface.h	/^static inline void jmp_init(void){$/;"	f	typeref:typename:void
jmp_install	jmp_interface.h	/^static inline void jmp_install(void){$/;"	f	typeref:typename:u32 store_jump_##func void
jmp_remove	jmp_interface.h	/^static inline void jmp_remove(void){$/;"	f	typeref:typename:void
mod_exit	main.c	/^static void __exit mod_exit(void){$/;"	f	typeref:typename:void __exit	file:
mod_init	main.c	/^static int __init mod_init(void){$/;"	f	typeref:typename:int __init	file:
mod_install	main.c	/^static int mod_install(void){$/;"	f	typeref:typename:int	file:
orig_cr0	toolfunc.h	/^static unsigned long orig_cr0;$/;"	v	typeref:typename:unsigned long
restore_function	main.c	/^static void restore_function(void){$/;"	f	typeref:typename:void	file:
sys_module-y	Makefile	/^sys_module-y := main.o sys_code.o$/;"	m
